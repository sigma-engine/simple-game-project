cmake_minimum_required(VERSION 3.10)
project(simple-game-project)
cmake_policy(SET CMP0074 NEW)

include(sigma-bake/bake.cmake)
include(cmake/cotire.cmake)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} "${CMAKE_BINARY_DIR}/bin")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} "${CMAKE_BINARY_DIR}/bin")
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} "${CMAKE_BINARY_DIR}/lib")
endforeach()

find_package(Assimp REQUIRED)
#find_package(benchmark REQUIRED)
find_package(cereal REQUIRED)
find_package(debug-draw REQUIRED)
find_package(glad REQUIRED)
find_package(glm REQUIRED)
#find_package(GMock REQUIRED)
#find_package(GTest REQUIRED)
find_package(nlohmann_json REQUIRED)
find_package(SDL2 REQUIRED)
find_package(stb REQUIRED)
find_package(Threads REQUIRED)


add_subdirectory(sigma-bake)
add_subdirectory(sigma-core)
add_subdirectory(sigma-opengl)
add_subdirectory(simple-game)

#set(DO_CLANG_TIDY "clang-tidy" "-checks=*,-clang-analyzer-alpha.*,-google-*,-llvm-*,-fuchsia-*")
#set_target_properties(sigma-core PROPERTIES CXX_CLANG_TIDY "${DO_CLANG_TIDY}")
#set_target_properties(sigma-opengl PROPERTIES CXX_CLANG_TIDY "${DO_CLANG_TIDY}")
#set_target_properties(simple-game PROPERTIES CXX_CLANG_TIDY "${DO_CLANG_TIDY}")
